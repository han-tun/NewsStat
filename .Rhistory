NewsStat("http://uk.reuters.com/article/uk-venezuela-gangs-idUKKCN1162AQ")
NewsStat("http://www.reuters.com/article/us-venezuela-colombia-border-idUSKCN10O0N9")
NewsStat("http://uk.reuters.com/article/uk-venezuela-brazil-idUKKCN10L1KE")
NewsStat("http://www.bbc.co.uk/news/world-latin-america-36759102")
NewsStat("http://www.bbc.co.uk/news/magazine-36913991")
NewsStat("http://uk.reuters.com/article/uk-venezuela-brazil-idUKKCN10L1KE")
NewsStat("http://www.bbc.co.uk/news/magazine-36913991")
NewsStat("http://www.bbc.co.uk/news/world-latin-america-36840034")
NewsStat("http://www.bbc.co.uk/news/world-latin-america-36145184")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat("http://www.telegraph.co.uk/business/2016/09/03/city-all-set-for-30bn-float-bonanza/")
NewsStat("http://www.telegraph.co.uk/investing/shares/the-data-that-says-the-stock-market-is-set-to-fall/")
NewsStat("http://www.telegraph.co.uk/business/2016/08/21/the-week-ahead-in-business-and-finance/")
NewsStat("http://www.citymetric.com/skylines/where-are-largest-cities-world-1051")
NewsStat("http://fivethirtyeight.com/features/significant-digits-for-friday-sept-2-2016/")
NewsStat("https://www.jrf.org.uk/report/benefits-providing-new-public-transport-deprived-areas")
NewsStat("http://www.nesta.org.uk/publications/geography-creativity-uk")
NewsStat("http://www.nesta.org.uk/sites/default/files/the_geography_of_creativity_in_the_uk.pdf")
NewsStat("http://www.nesta.org.uk/blog/interactive-data-visualisations-uks-creative-economy")
NewsStat("http://www.nesta.org.uk/blog/one-million-new-creative-jobs-uk-economy")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat("http://fivethirtyeight.com/features/significant-digits-for-friday-sept-2-2016/")
NewsStat("http://www.bbc.co.uk/news/world-latin-america-36145184")
NewsStat("http://www.bbc.co.uk/news/magazine-36913991")
NewsStat("http://www.npr.org/sections/thetwo-way/2016/08/31/492124724/african-elephant-population-declines-by-30-percent")
url <- "http://www.noisyroom.net/blog/RomneySpeech072912.pdf"
readLines(url)
install.packages("rvest")
library(rvest)
htmlpage <- html("http://www.noisyroom.net/blog/RomneySpeech072912.pdf")
htmlpage <- read_html("http://www.noisyroom.net/blog/RomneySpeech072912.pdf")
forecasthtml <- html_nodes(htmlpage)
forecast <- html_text(html_page)
htmlpage <- read_html("http://www.noisyroom.net/blog/RomneySpeech072912.pdf")
forecast <- html_text(htmlpage)
paste(forecast, collapse =" ")
getURLContent("http://www.noisyroom.net/blog/RomneySpeech072912.pdf")
url <- "http://www.noisyroom.net/blog/RomneySpeech072912.pdf"
dest <- tempfile(fileext = ".pdf")
filetxt <- sub(".pdf", ".txt", dest)
shell.exec(filetxt)
readLines(filetxt)
install.packages("pdftools")
library(pdftools)
download.file("http://arxiv.org/pdf/1403.2805.pdf", "1403.2805.pdf", mode = "wb")
txt <- pdf_text("1403.2805.pdf")
head(text)
head(txt)
txt <- pdf_text("http://arxiv.org/pdf/1403.2805.pdf")
head(txt)
NewsStat(txt)
NewsStat("http://arxiv.org/pdf/1403.2805.pdf")
NewsStat("http://www.npr.org/sections/thetwo-way/2016/08/31/492124724/african-elephant-population-declines-by-30-percent")
ReportStat <- function(txt) {
library(pdftools)
# PDF to text
txt <- pdf_text(txt)
# Clean unstructured text
report_text <- unlist(xpathApply(txt, '//p', xmlValue))
report_text <- gsub('\\n', ' ', report_text)
report_text <- paste(report_text, collapse = ' ')
# Define statistical insights - contains some of the most popular
stat_insights = c("(%)|(percent)|(percentage)|(per cent)|(average)|(bias)|(calculate)|
(causality)|(census)|(chi-square)|(correlation)|(data)|(distribution)|
(estimate)|(forecast)|(figure)|(frequency)|(hypothesis)|(inference)|
(regression)|(measure)|(median)|(metadata)|(normal distribution)|
(outlier)|(probability)|(p-value)|(pattern)|(proportion)|(range)|
(rate)|(skew)|(statistic)|(standard deviation)|(statistical model)|
(statistical significance)|(statistically significant)|(survey)|
(trend)|(total)")
# Separate sentences in text
sentences <- unlist(strsplit(report_text, split="\\."))
sentences[grep(stat_insights, sentences)]
}
ReportStat("http://unstats.un.org/sdgs/report/2016/The%20Sustainable%20Development%20Goals%20Report%202016.pdf")
ReportStat <- function(txt) {
library(pdftools)
# PDF to text
txt <- pdf_text(txt)
txt <- htmlTreeParse(txt, useInternal = TRUE)
# Clean unstructured text
report_text <- unlist(xpathApply(txt, '//p', xmlValue))
report_text <- gsub('\\n', ' ', report_text)
report_text <- paste(report_text, collapse = ' ')
# Define statistical insights - contains some of the most popular
stat_insights = c("(%)|(percent)|(percentage)|(per cent)|(average)|(bias)|(calculate)|
(causality)|(census)|(chi-square)|(correlation)|(data)|(distribution)|
(estimate)|(forecast)|(figure)|(frequency)|(hypothesis)|(inference)|
(regression)|(measure)|(median)|(metadata)|(normal distribution)|
(outlier)|(probability)|(p-value)|(pattern)|(proportion)|(range)|
(rate)|(skew)|(statistic)|(standard deviation)|(statistical model)|
(statistical significance)|(statistically significant)|(survey)|
(trend)|(total)")
# Separate sentences in text
sentences <- unlist(strsplit(report_text, split="\\."))
sentences[grep(stat_insights, sentences)]
}
ReportStat("http://unstats.un.org/sdgs/report/2016/The%20Sustainable%20Development%20Goals%20Report%202016.pdf")
ReportStat <- function(txt) {
library(pdftools)
# PDF to text
txt <- htmlTreeParse(txt, useInternal = TRUE)
txt <- pdf_text(txt)
# Clean unstructured text
report_text <- unlist(xpathApply(txt, '//p', xmlValue))
report_text <- gsub('\\n', ' ', report_text)
report_text <- paste(report_text, collapse = ' ')
# Define statistical insights - contains some of the most popular
stat_insights = c("(%)|(percent)|(percentage)|(per cent)|(average)|(bias)|(calculate)|
(causality)|(census)|(chi-square)|(correlation)|(data)|(distribution)|
(estimate)|(forecast)|(figure)|(frequency)|(hypothesis)|(inference)|
(regression)|(measure)|(median)|(metadata)|(normal distribution)|
(outlier)|(probability)|(p-value)|(pattern)|(proportion)|(range)|
(rate)|(skew)|(statistic)|(standard deviation)|(statistical model)|
(statistical significance)|(statistically significant)|(survey)|
(trend)|(total)")
# Separate sentences in text
sentences <- unlist(strsplit(report_text, split="\\."))
sentences[grep(stat_insights, sentences)]
}
ReportStat("http://unstats.un.org/sdgs/report/2016/The%20Sustainable%20Development%20Goals%20Report%202016.pdf")
ReportStat <- function(txt) {
# PDF to text
txt <- pdf_text(txt)
txt <- htmlTreeParse(txt, useInternal = TRUE)
# Clean unstructured text
report_text <- unlist(xpathApply(txt, '/p', xmlValue))
report_text <- gsub('\\n', ' ', report_text)
report_text <- paste(report_text, collapse = ' ')
# Define statistical insights - contains some of the most popular
stat_insights = c("(%)|(percent)|(percentage)|(per cent)|(average)|(bias)|(calculate)|
(causality)|(census)|(chi-square)|(correlation)|(data)|(distribution)|
(estimate)|(forecast)|(figure)|(frequency)|(hypothesis)|(inference)|
(regression)|(measure)|(median)|(metadata)|(normal distribution)|
(outlier)|(probability)|(p-value)|(pattern)|(proportion)|(range)|
(rate)|(skew)|(statistic)|(standard deviation)|(statistical model)|
(statistical significance)|(statistically significant)|(survey)|
(trend)|(total)")
# Separate sentences in text
sentences <- unlist(strsplit(report_text, split="\\."))
sentences[grep(stat_insights, sentences)]
}
ReportStat("http://unstats.un.org/sdgs/report/2016/The%20Sustainable%20Development%20Goals%20Report%202016.pdf")
ReportsStat <- function(txt) {
# PDF to text
txt <- pdf_text(txt)
txt <- htmlTreeParse(txt, useInternal = TRUE)
# Clean unstructured text
report_text <- unlist(xpathApply(txt, '//p', xmlValue))
report_text <- gsub('\\n', ' ', report_text)
report_text <- paste(report_text, collapse = ' ')
# Define statistical insights - contains some of the most popular
stat_insights = c("(%)|(percent)|(percentage)|(per cent)|(average)|(bias)|(calculate)|
(causality)|(census)|(chi-square)|(correlation)|(data)|(distribution)|
(estimate)|(forecast)|(figure)|(frequency)|(hypothesis)|(inference)|
(regression)|(measure)|(median)|(metadata)|(normal distribution)|
(outlier)|(probability)|(p-value)|(pattern)|(proportion)|(range)|
(rate)|(skew)|(statistic)|(standard deviation)|(statistical model)|
(statistical significance)|(statistically significant)|(survey)|
(trend)|(total)")
# Separate sentences in text
sentences <- unlist(strsplit(report_text, split="\\."))
sentences[grep(stat_insights, sentences)]
}
ReportsStat("http://unstats.un.org/sdgs/report/2016/The%20Sustainable%20Development%20Goals%20Report%202016.pdf")
ReportsStat("http://www.centreforcities.org/wp-content/uploads/2015/03/15-03-04-A-Century-of-Cities.pdf")
ReportsStat("http://www.uobabylon.edu.iq/sustainabilty/files/Sustainable%20Urban%20Planning.pdf")
ReportsStat("http://www.undp.org/content/dam/undp/library/corporate/brochure/SDGs_Booklet_Web_En.pdf")
ReportsStat("http://isecoeco.org/pdf/susdev.pdf")
ReportsStat <- function(txt) {
# PDF to text
txt <- pdf_text(txt)
txt <- htmlTreeParse(txt, useInternal = TRUE)
# Clean unstructured text
report_text <- unlist(xpathApply(txt, '//p', xmlValue))
report_text <- gsub('\\n', ' ', report_text)
report_text <- paste(report_text, collapse = ' ')
# Define statistical insights - contains some of the most popular
stat_insights = c("(%)|(percent)|(percentage)|(per cent)|(average)|(bias)|(calculate)|
(causality)|(census)|(chi-square)|(correlation)|(data)|(distribution)|
(estimate)|(forecast)|(figure)|(frequency)|(hypothesis)|(inference)|
(regression)|(mean)|(median)|(metadata)|(normal distribution)|
(outlier)|(probability)|(p-value)|(pattern)|
(rate)|(skew)|(statistic)|(standard deviation)|(statistical model)|
(statistical significance)|(statistically significant)|(survey)|
(trend)|(total)")
# Separate sentences in text
sentences <- unlist(strsplit(report_text, split="\\."))
sentences[grep(stat_insights, sentences)]
}
ReportsStat("http://isecoeco.org/pdf/susdev.pdf")
ReportsStat("https://www.nesta.org.uk/sites/default/files/dsireport.pdf")
NewsStat("https://en.wikipedia.org/wiki/FiveThirtyEight")
NewsStat("https://en.wikipedia.org/wiki/London")
XMLStat <- function(doc_html) {
# Parse the URL
doc_html <- xmlInternalTreeParse(doc_html, useInternal = TRUE)
# Clean unstructured text
news_text <- unlist(xpathApply(doc_html, '//p', xmlValue))
news_text <- gsub('\\n', ' ', news_text)
news_text <- paste(news_text, collapse = ' ')
# Define statistical insights - here are some of the most common
stat_insights = c("(%)|(data)|(percent)|(percentage)|(statistic)|(per cent)")
# Separate sentences in text
sentences <- unlist(strsplit(news_text,split="\\."))
sentences[grep(stat_insights, sentences)]
}
NewsStat("https://en.wikipedia.org/wiki/London")
XMLStat("https://en.wikipedia.org/wiki/London")
XMLStat <- function(doc_html) {
# Parse the URL
doc_html <- xmlInternalTreeParse(doc_html)
# Clean unstructured text
news_text <- unlist(xpathApply(doc_html, '//p', xmlValue))
news_text <- gsub('\\n', ' ', news_text)
news_text <- paste(news_text, collapse = ' ')
# Define statistical insights - here are some of the most common
stat_insights = c("(%)|(data)|(percent)|(percentage)|(statistic)|(per cent)")
# Separate sentences in text
sentences <- unlist(strsplit(news_text,split="\\."))
sentences[grep(stat_insights, sentences)]
}
NewsStat("http://en.wikipedia.org/wiki/London")
XMLStat <- function(doc_html) {
# Parse the URL
doc_html <- xmlInternalTreeParse(doc_html, useInternal = TRUE)
# Clean unstructured text
news_text <- unlist(xpathApply(doc_html, '//p', xmlValue))
news_text <- gsub('\\n', ' ', news_text)
news_text <- paste(news_text, collapse = ' ')
# Define statistical insights - here are some of the most common
stat_insights = c("(%)|(data)|(percent)|(percentage)|(statistic)|(per cent)")
# Separate sentences in text
sentences <- unlist(strsplit(news_text,split="\\."))
sentences[grep(stat_insights, sentences)]
}
XMLStat <- function(doc_html) {
# Parse the URL
doc_html <- getURL(doc_html)
doc_html <- htmlTreeParse(doc_html, useInternal = TRUE)
# Clean unstructured text
news_text <- unlist(xpathApply(doc_html, '//p', xmlValue))
news_text <- gsub('\\n', ' ', news_text)
news_text <- paste(news_text, collapse = ' ')
# Define statistical insights - here are some of the most common
stat_insights = c("(%)|(data)|(percent)|(percentage)|(statistic)|(per cent)")
# Separate sentences in text
sentences <- unlist(strsplit(news_text,split="\\."))
sentences[grep(stat_insights, sentences)]
}
XMLStat("https://en.wikipedia.org/wiki/London")
XMLStat("https://www.theguardian.com/business/datablog/2016/mar/31/bank-bailout-v-tata-bailout-how-the-costs-compare-steel-crisis")
NewsStat <- function(doc_html) {
# Parse the URL
doc_html <- getURL(doc_html)
doc_html <- htmlTreeParse(doc_html, useInternal = TRUE)
# Clean unstructured text
news_text <- unlist(xpathApply(doc_html, '//p', xmlValue))
news_text <- gsub('\\n', ' ', news_text)
news_text <- paste(news_text, collapse = ' ')
# Define statistical insights - here are some of the most common
stat_insights = c("(%)|(data)|(percent)|(percentage)|(statistic)|(per cent)")
# Separate sentences in text
sentences <- unlist(strsplit(news_text,split="\\."))
sentences[grep(stat_insights, sentences)]
}
NewsStat("https://www.theguardian.com/business/datablog/2016/mar/31/bank-bailout-v-tata-bailout-how-the-costs-compare-steel-crisis")
NewsStat("http://blogs.ft.com/ftdata/2016/08/26/century-of-earthquakes-italy-magnitude/?Authorised=false&_i_location=http%3A%2F%2Fblogs.ft.com%2Fftdata%2F2016%2F08%2F26%2Fcentury-of-earthquakes-italy-magnitude%2F&_i_referer=http%3A%2F%2Fblogs.ft.com%2Fftdata%2F&classification=conditional_standard&iab=barrier-app")
NewsStat("https://treaties.un.org/doc/publication/ctc/uncharter.pdf")
NewsStat("https://en.wikipedia.org/wiki/FiveThirtyEight")
NewsStat <- function(doc_html) {
# Parse the URL
doc_html <- getURL(doc_html)
doc_html <- htmlTreeParse(doc_html, useInternal = TRUE)
# Clean unstructured text
news_text <- unlist(xpathApply(doc_html, '//p', xmlValue))
news_text <- gsub('\\n', ' ', news_text)
news_text <- paste(news_text, collapse = ' ')
# Define statistical insights - here are some of the most common
stat_insights = c("(%)|(percent)|(percentage)|(per cent)|(average)|(bias)|(calculate)|
(causality)|(census)|(chi-square)|(correlation)|(data)|(distribution)|
(estimate)|(forecast)|(figure)|(frequency)|(hypothesis)|(inference)|
(regression)|(mean)|(median)|(metadata)|(normal distribution)|
(outlier)|(probability)|(p-value)|(pattern)|
(rate)|(skew)|(statistic)|(standard deviation)|(statistical model)|
(statistical significance)|(statistically significant)|(survey)|
(trend)|(total)")
# Separate sentences in text
sentences <- unlist(strsplit(news_text,split="\\."))
sentences[grep(stat_insights, sentences)]
}
NewsStat("http://fivethirtyeight.com/features/why-its-so-hard-to-find-the-next-earth-even-if-youre-looking-right-at-it/")
NewsStat("http://www.nesta.org.uk/blog/employment-2030-skills-competencies-and-implications-learning")
NewsStat("http://www.centreforcities.org/blog/three-things-data-shows-cities-public-finances/")
NewsStat <- function(doc_html) {
# Parse the URL
doc_html <- getURL(doc_html)
doc_html <- htmlTreeParse(doc_html, useInternal = TRUE)
# Clean unstructured text
news_text <- unlist(xpathApply(doc_html, '//p', xmlValue))
news_text <- gsub('\\n', ' ', news_text)
news_text <- paste(news_text, collapse = ' ')
# Define statistical insights - here are some of the most common
stat_insights = c("(%)|(percent)|(percentage)|(per cent)|(average)|(bias)|(calculate)|
(causality)|(census)|(chi-square)|(correlation)|(data)|(distribution)|
(estimate)|(forecast)|(figure)|(frequency)|(hypothesis)|(inference)|
(regression)|(mean)|(median)|(metadata)|(normal distribution)|
(outlier)|(probability)|(p-value)|(pattern)|
(rate)|(skew)|(statistic)|(standard deviation)|(statistical model)|
(statistical significance)|(statistically significant)|(survey)|
(trend)|(total)")
# Separate sentences in text
sentences <- unlist(strsplit(news_text,split="\\. "))
sentences[grep(stat_insights, sentences)]
}
NewsStat("http://www.centreforcities.org/blog/three-things-data-shows-cities-public-finances/")
ReportsStat <- function(txt) {
# PDF to text
txt <- pdf_text(txt)
txt <- htmlTreeParse(txt, useInternal = TRUE)
# Clean unstructured text
report_text <- unlist(xpathApply(txt, '//p', xmlValue))
report_text <- gsub('\\n', ' ', report_text)
report_text <- paste(report_text, collapse = ' ')
# Define statistical insights - contains some of the most popular
stat_insights = c("(%)|(percent)|(percentage)|(per cent)|(average)|(bias)|(calculate)|
(causality)|(census)|(chi-square)|(correlation)|(data)|(distribution)|
(estimate)|(forecast)|(figure)|(frequency)|(hypothesis)|(inference)|
(regression)|(mean)|(median)|(metadata)|(normal distribution)|
(outlier)|(probability)|(p-value)|(pattern)|
(rate)|(skew)|(statistic)|(standard deviation)|(statistical model)|
(statistical significance)|(statistically significant)|(survey)|
(trend)|(total)")
# Separate sentences in text
sentences <- unlist(strsplit(report_text, split="\\. "))
sentences[grep(stat_insights, sentences)]
}
ReportsStat("https://www.nesta.org.uk/sites/default/files/dsireport.pdf")
ReportsStat <- function(txt) {
# PDF to text
txt <- pdf_text(txt)
txt <- htmlTreeParse(txt, useInternal = TRUE)
# Clean unstructured text
report_text <- unlist(xpathApply(txt, '//p', xmlValue))
report_text <- gsub('\\n', ' ', report_text)
report_text <- paste(report_text, collapse = ' ')
# Define statistical insights - contains some of the most popular
stat_insights = c("(%)|(percent)|(percentage)|(per cent)|(average)|(bias)|(calculate)|
(causality)|(census)|(chi-square)|(correlation)|(data)|(distribution)|
(estimate)|(forecast)|(figure)|(frequency)|(hypothesis)|(inference)|
(regression)|(mean)|(median)|(metadata)|(normal distribution)|
(outlier)|(probability)|(p-value)|(pattern)|
(rate)|(skew)|(statistic)|(standard deviation)|(statistical model)|
(statistical significance)|(statistically significant)|(survey)|
(trend)|(total)")
# Separate sentences in text
sentences <- unlist(strsplit(report_text, split="\\."))
sentences[grep(stat_insights, sentences)]
}
ReportsStat("https://www.nesta.org.uk/sites/default/files/dsireport.pdf")
NewsStat(https://www.theguardian.com/business/unemployment-and-employment-statistics)
NewsStat("https://www.theguardian.com/business/unemployment-and-employment-statistics")
NewsStat("https://www.theguardian.com/aviva-save-smarter/2016/jun/17/saving-britain-the-startling-statistics-how-do-you-compare")
install.packages("devtools")
library("devtools")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
setwd("./NewsStat")
document()
install("NewsStat")
setwd("./Documents")
create("NewsStat")
----
setwd("./NewsStat")
setwd("./NewsStat")
document()
setwd("..")
install("NewsStat")
?NewsStat
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
setwd("./NewsStat")
document()
setwd("..")
install("NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
install_github('NewsStat','lbuk')
install_github('lbuk/NewsStat','lbuk')
install_github('lbuk/NewsStat')
install_github("lbuk/NewsStat")
devtools::install_github("lbuk/NewsStat")
devtools::install_github("lbuk/NewsStat")
devtools::install_github("lbuk/NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
?NewsStat
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
install("NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
?NewsStat
devtools::install_github("lbuk/NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
?NewsStat
devtools::install_github("lbuk/NewsStat")
devtools::install_github("lbuk/NewsStat")
uninstall("NewsStat")
devtools::install_github("lbuk/NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
devtools::install_github("lbuk/NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
devtools::install_github("lbuk/NewsStat")
install.packages("devtools")
library("devtools")
install.packages("devtools")
devtools::install_github("lbuk/NewsStat")
devtools::install_github("lbuk/NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
?NewsStat
install("NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
setwd("./NewsStat")
document()
setwd("..")
install("NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
devtools::install_github("lbuk/NewsStat")
uninstall("NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
devtools::install_github("lbuk/NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
?NewsStat
NewsStat(doc_html = "http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
install("NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
setwd("..")
install("NewsStat")
library(NewsStat)
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
devtools::install_github("lbuk/NewsStat_test")
devtools::install_github("lbuk/NewsStat_test")
devtools::install_github("lbuk/NewsStat_test")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
uninstall("NewsStat")
uninstall(NewsStat)
uninstall("NewsStat")
devtools::install_github("lbuk/NewsStat_test")
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
?NewsStat_test
?NewsStat
devtools::install_github("lbuk/NewsStat_test")
devtools::install_github("lbuk/NewsStat_test")
devtools::install_github("lbuk/NewsStat_test")
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
?NewsStat
?NewsStat_test
devtools::install_github("lbuk/NewsStat_test")
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
uninstall("NewsStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
install.packages("devtools")
library("devtools")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
install_github("lbuk/NewsStat_test")
install_github("lbuk/NewsStat_test", force = TRUE)
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
library(NewsStat_test)
library(NewsStat)
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat_hello("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
install("NewStat")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
library(NewsStat)
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
install("NewsStat")
install("NewsStat")
setwd("./NewsStat")
setwd("./Documents")
create("NewsStat")
setwd("./NewsStat")
document()
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
library(NewsStat)
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
install_github('NewsStat_test','lbuk')
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
library(NewsStat)
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
install_github('NewsStat','lbuk')
install_github('lbuk/NewsStat')
install_github('lbuk/NewsStat_test')
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
library(NewsStat)
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
?NewsStat
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
install_github('lbuk/NewsStat_test')
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
library(NewsStat_test)
library(NewsStat)
?NewsStat
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
install_github('lbuk/NewsStat')
library(NewsStat)
NewsStat_test("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
NewsStat("http://www.digitaltrends.com/business/equal-pay-pledge-tech/")
